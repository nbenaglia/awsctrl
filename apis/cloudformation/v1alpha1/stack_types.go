/*
Copyright Â© 2019 AWS Controller author

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	metav1alpha1 "go.awsctrl.io/manager/apis/meta/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// StackSpec defines the desired state of Stack
type StackSpec struct {
	metav1alpha1.CloudFormationMeta `json:",inline"`

	// Capabilities In some cases, you must explicity acknowledge that your stack
	// template contains certain capabilities in order for AWS CloudFormation to
	// create the stack.
	// +optional
	Capabilities []*string `json:"capabilities,omitempty"`

	// Parameters A list of Parameter structures that specify input parameters for
	// the stack. For more information, see the Parameter data type.
	Parameters map[string]string `json:"parameters"`

	// ClientRequestToken A unique identifier for this CreateStack request.
	// Specify this token if you plan to retry requests so that AWS CloudFormation
	// knows that you're not attempting to create a stack with the same name. You
	// might retry CreateStack requests to ensure that AWS CloudFormation
	// successfully received them.
	// +optional
	ClientRequestToken string `json:"clientRequestToken,omitempty"`

	// TemplateBody Structure containing the template body with a minimum length
	// of 1 byte and a maximum length of 51,200 bytes.
	TemplateBody string `json:"templateBody"`
}

// StackStatus defines the observed state of Stack
type StackStatus struct {
	metav1alpha1.StatusMeta `json:",inline"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:resource:categories=aws;all;cloudformation
// +kubebuilder:printcolumn:JSONPath=.status.status,description="status of the stack",name=Status,priority=1,type=string

// Stack is the Schema for the Stacks API
type Stack struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   StackSpec   `json:"spec,omitempty"`
	Status StackStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// StackList contains a list of Stack
type StackList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Stack `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Stack{}, &StackList{})
}

// GetNotificationARNs is an autogenerated deepcopy function, will return notifications for stack
func (in *Stack) GetNotificationARNs() []string {
	notifcations := []string{}
	for _, notifarn := range in.Spec.NotificationARNs {
		notifcations = append(notifcations, *notifarn)
	}
	return notifcations
}
